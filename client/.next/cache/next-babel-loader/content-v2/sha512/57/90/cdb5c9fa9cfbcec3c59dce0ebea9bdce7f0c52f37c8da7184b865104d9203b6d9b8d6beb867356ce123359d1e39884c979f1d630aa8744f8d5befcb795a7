{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst name = 'auth';\nconst types = {\n  AUTH: `AUTH_${name}`\n};\nconst initialState = {\n  access: false\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case types.AUTH:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          access: action.payload\n        });\n      }\n\n    default:\n      return {\n        state\n      };\n  }\n});\nexport const authentication = message => dispatch => {\n  dispatch({\n    type: types.AUTH,\n    payload: message\n  });\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/dtmFinal/client/redux/reducers/auth.js"],"names":["name","types","AUTH","initialState","access","state","action","type","payload","authentication","message","dispatch"],"mappings":";;;;;;AAAA,MAAMA,IAAI,GAAG,MAAb;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAG,QAAOF,IAAK;AADT,CAAd;AAGA,MAAMG,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;AAGA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,KAAK,CAACC,IAAX;AAAiB;AACb,+CACOG,KADP;AACcD,UAAAA,MAAM,EAAEE,MAAM,CAACE;AAD7B;AAGH;;AACD;AACI,aAAO;AACHH,QAAAA;AADG,OAAP;AAPR;AAWH,CAZD;AAaA,OAAO,MAAMI,cAAc,GAAIC,OAAD,IAAaC,QAAQ,IAAI;AACnDA,EAAAA,QAAQ,CAAC;AAACJ,IAAAA,IAAI,EAAEN,KAAK,CAACC,IAAb;AAAmBM,IAAAA,OAAO,EAACE;AAA3B,GAAD,CAAR;AACH,CAFM","sourcesContent":["const name = 'auth'\r\n\r\nconst types = {\r\n    AUTH: `AUTH_${name}`\r\n}\r\nconst initialState = {\r\n    access: false\r\n}\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.AUTH: {\r\n            return {\r\n                ...state, access: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return {\r\n                state\r\n            }\r\n    }\r\n}\r\nexport const authentication = (message) => dispatch => {\r\n    dispatch({type: types.AUTH, payload:message});\r\n}"]},"metadata":{},"sourceType":"module"}