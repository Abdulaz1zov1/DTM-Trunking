{"ast":null,"code":"import _defineProperty from \"C:/Users/user/Desktop/dtmFinal/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar name = 'sidebar';\nvar types = {\n  TOGGLE: \"TOGGLE_\".concat(name)\n};\nvar initialState = {\n  open: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.TOGGLE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          open: !state.open\n        });\n      }\n\n    default:\n      return {\n        state: state\n      };\n  }\n});\nexport var toggle = function toggle() {\n  return function (dispatch) {\n    dispatch({\n      type: types.TOGGLE\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/dtmFinal/client/redux/reducers/sidebar.js"],"names":["name","types","TOGGLE","initialState","open","state","action","type","toggle","dispatch"],"mappings":";;;;;;AAAA,IAAMA,IAAI,GAAG,SAAb;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,mBAAYF,IAAZ;AADI,CAAd;AAGA,IAAMG,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAGA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,KAAK,CAACC,MAAX;AAAmB;AACf,+CACOG,KADP;AACcD,UAAAA,IAAI,EAAE,CAACC,KAAK,CAACD;AAD3B;AAGH;;AACD;AACI,aAAO;AACHC,QAAAA,KAAK,EAALA;AADG,OAAP;AAPR;AAWH,CAZD;AAaA,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACpCA,IAAAA,QAAQ,CAAC;AAACF,MAAAA,IAAI,EAAEN,KAAK,CAACC;AAAb,KAAD,CAAR;AACH,GAFqB;AAAA,CAAf","sourcesContent":["const name = 'sidebar'\r\n\r\nconst types = {\r\n    TOGGLE: `TOGGLE_${name}`\r\n}\r\nconst initialState = {\r\n    open: false\r\n}\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.TOGGLE: {\r\n            return {\r\n                ...state, open: !state.open\r\n            }\r\n        }\r\n        default:\r\n            return {\r\n                state\r\n            }\r\n    }\r\n}\r\nexport const toggle = () => dispatch => {\r\n    dispatch({type: types.TOGGLE});\r\n}"]},"metadata":{},"sourceType":"module"}